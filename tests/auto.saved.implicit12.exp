#!/usr/bin/env expect

if { [info exists ::env(MUTE_TOP)] } {
    set MUTE_TOP $::env(MUTE_TOP)
}
if { ! [info exists MUTE_TOP]} {
    set MUTE_TOP [exec git rev-parse --show-toplevel --show-superproject-working-tree 2>/dev/null]
}
if { ! [info exists MUTE_TOP]} {
    set MUTE_TOP "[file dirname $argv0]/.."
}

puts "MUTE_TOP=$MUTE_TOP"
set MUTE "$MUTE_TOP/mute"
set CHAT "$MUTE_TOP/tests/chat"

log_user 0
set timeout 5

set chatpid [spawn sh -c "exec $CHAT -s -w 5"]
set chat_spawn_id $spawn_id
puts "chat pid=$chatpid"
expect "stdout"
expect "stderr"
expect "saved stdout"

system $MUTE -dd $chatpid
puts "mute complete, restarting chat $chatpid"
system kill -USR1 $chatpid

set spawn_id $chat_spawn_id
exp_internal 1
for {set i 1} {$i <= 5} {incr i} {
    expect {
        timeout           {puts "timed out"; exit 1}
        "saved stdout $i" {}        
        "stdout"          {puts "saw stdout"; exit 2}
        "stderr"          {puts "saw stderr"; exit 3}
        eof               {puts "premature eof"; exit 5}
    }
}
expect {
    eof {puts "saved stdout output was correct"}
}

